{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "Semaphore__CallerIsNotTheGroupAdmin",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Semaphore__CallerIsNotThePendingGroupAdmin",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "Semaphore__GroupDoesNotExist",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "groupId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "oldAdmin",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "GroupAdminPending",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "groupId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "oldAdmin",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "GroupAdminUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "groupId",
						"type": "uint256"
					}
				],
				"name": "GroupCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "groupId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "identityCommitment",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "merkleTreeRoot",
						"type": "uint256"
					}
				],
				"name": "MemberAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "groupId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "identityCommitment",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "merkleTreeRoot",
						"type": "uint256"
					}
				],
				"name": "MemberRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "groupId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "identityCommitment",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newIdentityCommitment",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "merkleTreeRoot",
						"type": "uint256"
					}
				],
				"name": "MemberUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "groupId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "startIndex",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "identityCommitments",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "merkleTreeRoot",
						"type": "uint256"
					}
				],
				"name": "MembersAdded",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "groupId",
						"type": "uint256"
					}
				],
				"name": "getGroupAdmin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "groupId",
						"type": "uint256"
					}
				],
				"name": "getMerkleTreeDepth",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "groupId",
						"type": "uint256"
					}
				],
				"name": "getMerkleTreeRoot",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "groupId",
						"type": "uint256"
					}
				],
				"name": "getMerkleTreeSize",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "groupId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "identityCommitment",
						"type": "uint256"
					}
				],
				"name": "hasMember",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "groupId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "identityCommitment",
						"type": "uint256"
					}
				],
				"name": "indexOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"GroupAdminPending(uint256,address,address)": {
					"details": "Event emitted when a group admin is being updated.",
					"params": {
						"groupId": ": Id of the group.",
						"newAdmin": ": New admin of the group.",
						"oldAdmin": ": Old admin of the group."
					}
				},
				"GroupAdminUpdated(uint256,address,address)": {
					"details": "Event emitted when a new admin is assigned to a group.",
					"params": {
						"groupId": ": Id of the group.",
						"newAdmin": ": New admin of the group.",
						"oldAdmin": ": Old admin of the group."
					}
				},
				"GroupCreated(uint256)": {
					"details": "Event emitted when a new group is created.",
					"params": {
						"groupId": ": Id of the group."
					}
				},
				"MemberAdded(uint256,uint256,uint256,uint256)": {
					"details": "Event emitted when a new identity commitment is added.",
					"params": {
						"groupId": ": Group id of the group.",
						"identityCommitment": ": New identity commitment.",
						"index": ": Merkle tree leaf index.",
						"merkleTreeRoot": ": New root hash of the tree."
					}
				},
				"MemberRemoved(uint256,uint256,uint256,uint256)": {
					"details": "Event emitted when a new identity commitment is removed.",
					"params": {
						"groupId": ": Group id of the group.",
						"identityCommitment": ": Existing identity commitment to be removed.",
						"index": ": Identity commitment index.",
						"merkleTreeRoot": ": New root hash of the tree."
					}
				},
				"MemberUpdated(uint256,uint256,uint256,uint256,uint256)": {
					"details": "Event emitted when an identity commitment is updated.",
					"params": {
						"groupId": ": Group id of the group.",
						"identityCommitment": ": Existing identity commitment to be updated.",
						"index": ": Identity commitment index.",
						"merkleTreeRoot": ": New root hash of the tree.",
						"newIdentityCommitment": ": New identity commitment."
					}
				},
				"MembersAdded(uint256,uint256,uint256[],uint256)": {
					"details": "Event emitted when many identity commitments are added at the same time.",
					"params": {
						"groupId": ": Group id of the group.",
						"identityCommitments": ": The new identity commitments.",
						"merkleTreeRoot": ": New root hash of the tree.",
						"startIndex": ": Index of the first element of the new identity commitments in the merkle tree."
					}
				}
			},
			"kind": "dev",
			"methods": {
				"getGroupAdmin(uint256)": {
					"details": "Returns the address of the group admin. The group admin can be an Ethereum account or a smart contract.",
					"params": {
						"groupId": ": Id of the group."
					},
					"returns": {
						"_0": "Address of the group admin."
					}
				},
				"getMerkleTreeDepth(uint256)": {
					"details": "Returns the depth of the tree of a group.",
					"params": {
						"groupId": ": Id of the group."
					},
					"returns": {
						"_0": "Depth of the group tree."
					}
				},
				"getMerkleTreeRoot(uint256)": {
					"details": "Returns the last root hash of a group.",
					"params": {
						"groupId": ": Id of the group."
					},
					"returns": {
						"_0": "Root hash of the group."
					}
				},
				"getMerkleTreeSize(uint256)": {
					"details": "Returns the number of tree leaves of a group.",
					"params": {
						"groupId": ": Id of the group."
					},
					"returns": {
						"_0": "Number of tree leaves."
					}
				},
				"hasMember(uint256,uint256)": {
					"details": "Returns true if a member exists in a group.",
					"params": {
						"groupId": ": Id of the group.",
						"identityCommitment": ": Identity commitment."
					},
					"returns": {
						"_0": "True if the member exists, false otherwise."
					}
				},
				"indexOf(uint256,uint256)": {
					"details": "Returns the index of a member.",
					"params": {
						"groupId": ": Id of the group.",
						"identityCommitment": ": Identity commitment."
					},
					"returns": {
						"_0": "Index of member."
					}
				}
			},
			"title": "SemaphoreGroups contract interface.",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Semaphore/.git/objects/08/ISemaphoreGroups.sol": "ISemaphoreGroups"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Semaphore/.git/objects/08/ISemaphoreGroups.sol": {
			"keccak256": "0x0068c9db7a30c22a79d1be39b391f902298b7f782dfb561885e3ff61a1eb7d45",
			"license": "MIT",
			"urls": [
				"bzz-raw://4b167866fd6b6d577e95866cc0116525df9e82c7fa1d8a7b629542d9cb6a34ad",
				"dweb:/ipfs/QmPMcCq1jBxAPnpAtnUMq4812njcLiohr2NMQGjGWwKVYr"
			]
		}
	},
	"version": 1
}